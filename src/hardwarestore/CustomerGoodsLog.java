/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hardwarestore;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author thisa
 */
public class CustomerGoodsLog extends javax.swing.JFrame {

    /**
     * Creates new form CustomerGoodsLog
     */
    private Connection con = null;
    private PreparedStatement pst;
    private ResultSet rs; 
    
    private String custID;
    private String custName;
    private String balance = "0.0";
    private String amount  = "0.0";
    
    private String itemNo;
    private String description;
    private String quantityAvailable;
    private String prevPrice;
    private Vector originalTableModel;
    private String prevQuantity;
    
    private double ExtraBal;
    
    public CustomerGoodsLog() {
        initComponents();
    }
    public CustomerGoodsLog(String pCreationDate, String pCustID, String pName) {
    
        initComponents(); 
        clearFields();
        this.custID = pCustID;
        this.custName = pName;
        
        jLabel12.setText(pName);
        jLabel13.setText(pCreationDate);   
        HelperClass.Date(jLabel2);
        HelperClass.ShowTime(jLabel4);
        
        con = HelperClass.connect();
        StockTable();
        CustomerGoodsTable();
        autoID();
        originalTableModel = (Vector) ((DefaultTableModel) StockTable.getModel()).getDataVector().clone();//backup of original values to check
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void autoID(){
        Statement s;
        try {
            s = con.createStatement();
            rs = s.executeQuery("select MAX(cust_trans_id) from postpaid_customer_transactions");
            rs.next();
            rs.getString("MAX(cust_trans_id)");
            
            if (rs.getString("MAX(cust_trans_id)") == null){
                jLabel15.setText("CT000001");              
            }
            else{
                long id = Long.parseLong(rs.getString("MAX(cust_trans_id)").substring(2,rs.getString("MAX(cust_trans_id)").length()));               
                id++;
                jLabel15.setText("CT" + String.format("%06d", id));
            }
        } catch (SQLException ex) {
            Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }
    public void StockTable(){
        
        try {
            pst = con.prepareStatement("select *from stock");
            rs = pst.executeQuery();
            ResultSetMetaData rsm = rs.getMetaData();
            int c;
            c = rsm.getColumnCount();
            DefaultTableModel dt = (DefaultTableModel)StockTable.getModel();
            
            dt.setRowCount(0);
            
            while(rs.next()){
                
                Vector vl = new Vector();
                for (int i = 1; i < c; i++){
                    vl.add(rs.getString("item_no"));
                    vl.add(rs.getString("description"));
                    vl.add(rs.getString("quantity_available"));
                    vl.add(rs.getString("unit_price"));
                    
                }
                dt.addRow(vl);
            }
                   
        } catch (SQLException ex) {
            Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      
    public void CustomerGoodsTable(){
        
        try {
            pst = con.prepareStatement("select *from postpaid_customer_transactions where cust_id = ?");
            pst.setString(1, custID);
            rs = pst.executeQuery();
            
            ResultSetMetaData rsm = rs.getMetaData();
            int c;
            c = rsm.getColumnCount();
            DefaultTableModel dt = (DefaultTableModel)CustomerGoodsTable.getModel();
            
            dt.setRowCount(0);
            
            while(rs.next()){
                
                Vector vl = new Vector();
                
                for (int i = 1; i < c; i++){      

                        vl.add(rs.getString("cust_trans_id"));
                        vl.add(rs.getString("date"));
                        vl.add(rs.getString("time"));
                        vl.add(rs.getString("description"));
                        vl.add(rs.getString("quantity"));
                        vl.add(rs.getString("sold_price"));
                        vl.add(rs.getString("balance"));
                
 
                    if(i == c - 1){
                        balance = rs.getString("balance");
                    }
                    
                }
                dt.addRow(vl);
            }
                   
        } catch (SQLException ex) {
            Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void clearFields(){
        jTextField8.setText("");       
        jTextField5.setText("");     
        jLabel17.setVisible(false);       
        jLabel18.setVisible(false);
        jTextField4.setVisible(false);       
        jTextField7.setVisible(false);        
        jButton10.setEnabled(true);
        StockTable.setVisible(true);
        jButton14.setEnabled(false);  
        jButton13.setEnabled(false);
        
        jLabel20.setVisible(false);
        jTextField8.setVisible(false);
        jLabel21.setVisible(false);
        jTextField5.setVisible(false);
        
        
        jTextField8.requestFocus(); 
    }
      
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CustomerGoodsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        StockSearchBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        StockTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel1.setText("Date:");

        jLabel2.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel2.setText("DD/MM/YY");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel5.setText("   Customer Goods Log");

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel3.setText("Time:");

        jLabel4.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel4.setText("Min/Sec");

        jLabel7.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel7.setText("Creation Date:");

        jButton10.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jButton10.setText("Insert");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jButton13.setText("Delete");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jButton9.setText("Back");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel11.setText("Customer Name: ");

        jLabel12.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel12.setText("name");

        jLabel13.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel13.setText("creation date");

        CustomerGoodsTable.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        CustomerGoodsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cust_Trans No", "Date", "Time", "Description", "Quantity", "Sold Price", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        CustomerGoodsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerGoodsTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CustomerGoodsTableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(CustomerGoodsTable);
        if (CustomerGoodsTable.getColumnModel().getColumnCount() > 0) {
            CustomerGoodsTable.getColumnModel().getColumn(0).setMinWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(0).setMaxWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(1).setMinWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(1).setMaxWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(2).setMinWidth(120);
            CustomerGoodsTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            CustomerGoodsTable.getColumnModel().getColumn(2).setMaxWidth(120);
            CustomerGoodsTable.getColumnModel().getColumn(4).setMinWidth(80);
            CustomerGoodsTable.getColumnModel().getColumn(4).setPreferredWidth(80);
            CustomerGoodsTable.getColumnModel().getColumn(4).setMaxWidth(80);
            CustomerGoodsTable.getColumnModel().getColumn(5).setMinWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(5).setPreferredWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(5).setMaxWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(6).setMinWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(6).setPreferredWidth(100);
            CustomerGoodsTable.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel6.setText("Search:");

        StockSearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockSearchBoxActionPerformed(evt);
            }
        });
        StockSearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                StockSearchBoxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(StockSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StockSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        StockTable.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        StockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item No", "Description", "Quantity Available", "Unit  Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        StockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StockTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StockTable);
        if (StockTable.getColumnModel().getColumnCount() > 0) {
            StockTable.getColumnModel().getColumn(0).setMinWidth(80);
            StockTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            StockTable.getColumnModel().getColumn(0).setMaxWidth(80);
            StockTable.getColumnModel().getColumn(2).setMinWidth(120);
            StockTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            StockTable.getColumnModel().getColumn(2).setMaxWidth(120);
            StockTable.getColumnModel().getColumn(3).setMinWidth(80);
            StockTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            StockTable.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        jLabel14.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel14.setText("Customer Transaction No: ");

        jLabel15.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel15.setText("trans no");

        jLabel16.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel17.setText("Date:");

        jTextField7.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel18.setText("Time: ");

        jTextField4.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jButton14.setText("Update");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel19.setText("Item No:");

        jLabel20.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel20.setText("Quantity:");

        jTextField8.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jLabel21.setText("Total Price: ");

        jTextField5.setFont(new java.awt.Font("Cambria Math", 0, 24)); // NOI18N
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jButton11.setText("Enter a Payment");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel2)
                                .addGap(139, 139, 139)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(118, 118, 118))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(292, 292, 292))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(34, 34, 34)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(761, 761, 761))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19)
                                        .addGap(26, 26, 26)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(202, 202, 202))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(80, 80, 80)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40)
                                .addComponent(jLabel14)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addGap(34, 34, 34)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addGap(21, 21, 21)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
        try{
            
         
            double d1;
            d1 = Double.parseDouble(jTextField8.getText());

            double d2;
            d2 = Double.parseDouble(jTextField5.getText());
            
            double d3;
            d3 = Double.parseDouble(balance);
            d3 = d3 + Double.parseDouble(jTextField5.getText());
            
            balance = Double.toString(d3);
            
            double d4;
            d4 = Double.parseDouble(quantityAvailable) - d1;
            
                try {
                pst = con.prepareStatement("update stock set quantity_available = ? where item_no = ?");
                pst.setString(1, Double.toString(d4));
                pst.setString(2, itemNo);
                pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
                }
            
           
                try {
                    pst = con.prepareStatement("insert into postpaid_customer_transactions(cust_trans_id,date,time,description,quantity,sold_price,balance,amount,cust_id,name) values(?,?,?,?,?,?,?,?,?,?)");

                    pst.setString(1, jLabel15.getText());
                    pst.setString(2, jLabel2.getText());
                    pst.setString(3, jLabel4.getText());
                    pst.setString(4, description);
                    pst.setString(5, jTextField8.getText());
                    pst.setString(6, jTextField5.getText());
                    pst.setString(7, balance);
                    pst.setString(8, amount);
                    pst.setString(9, custID);
                    pst.setString(10, custName);

                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Item Entered Successfully! ");
                } catch (SQLException ex) {
                         Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
                }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please make sure Total Price & Quantity are floating point numbers! ");
        }         
         
        CustomerGoodsTable();
        StockTable();
        autoID();
        clearFields();

         
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.dispose();
        SelectCustomer ob = new SelectCustomer();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void StockSearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockSearchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StockSearchBoxActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void StockSearchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StockSearchBoxKeyReleased
        DefaultTableModel currtableModel = (DefaultTableModel) StockTable.getModel();//To empty the table before search
        currtableModel.setRowCount(0); //To search for contents from original table content
        
        for (Object rows : originalTableModel) {
            Vector rowVector = (Vector) rows;
            for (Object column : rowVector) {
                if (column.toString().contains(StockSearchBox.getText())) {
                    //content found so adding to table
                    currtableModel.addRow(rowVector);
                    break;
                }
            }

        }
    }//GEN-LAST:event_StockSearchBoxKeyReleased

    private void StockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockTableMouseClicked

        jLabel20.setVisible(true);
        jTextField8.setVisible(true);
        jLabel21.setVisible(true);
        jTextField5.setVisible(true);
        
        DefaultTableModel d1 = (DefaultTableModel)StockTable.getModel();
        int SelectIndex = StockTable.getSelectedRow();  
        
         itemNo = d1.getValueAt(SelectIndex, 0).toString();
         description = d1.getValueAt(SelectIndex, 1).toString();
         quantityAvailable = d1.getValueAt(SelectIndex, 2).toString();
         jLabel16.setText(itemNo);
    }//GEN-LAST:event_StockTableMouseClicked

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed

        try{
            double d1 = Double.parseDouble(jTextField8.getText());
            double d2 = Double.parseDouble(jTextField5.getText());

            //get the balance from prev transaction       
            try {
                pst = con.prepareStatement("select *from postpaid_customer_transactions where cust_trans_id = ?");
                pst.setString(1, jLabel15.getText());
                rs = pst.executeQuery();       
                while(rs.next()){
                    balance = rs.getString("balance");
                }              
            }catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
            }
            //System.out.println(balance);

            double d3 = Double.parseDouble(balance);
            double d4 = Double.parseDouble(balance);
            d3 = d3 - Double.parseDouble(prevPrice) + Double.parseDouble(jTextField5.getText());

            balance = Double.toString(d3);

            ExtraBal = d3 - d4;
            //System.out.println("Extra bal: " + ExtraBal);

            //get available quantity
            try {
                pst = con.prepareStatement("select *from stock where description = ?");
                pst.setString(1, description);
                rs = pst.executeQuery();
                while(rs.next()){
                    quantityAvailable = rs.getString("quantity_available");
                }
            } catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
            }

            double d5 = Double.parseDouble(quantityAvailable) + Double.parseDouble(prevQuantity) - d1;

            try {
                pst = con.prepareStatement("update stock set quantity_available = ? where description = ?");
                pst.setString(1, Double.toString(d5));
                pst.setString(2, description);
                pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                pst = con.prepareStatement("update postpaid_customer_transactions set date = ?, time = ?, description = ?, quantity = ?, sold_price = ?, balance = ?, amount = ?, cust_id = ?, name = ? where cust_trans_id = ?");

                pst.setString(1, jTextField7.getText());
                pst.setString(2, jTextField4.getText());
                pst.setString(3, description);
                pst.setString(4, jTextField8.getText());
                pst.setString(5, jTextField5.getText());
                pst.setString(6, balance);
                pst.setString(7, amount);
                pst.setString(8, custID);
                pst.setString(9, custName);
                pst.setString(10, jLabel15.getText());

                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Item Updated Successfully! ");
            } catch (SQLException ex) {
                     Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please make shure Total Price & Quantity are floating point numbers! ");
        } 
        
         // change next trasactions according to the change  -------------------------------------------------------------------------------------
         try {
            pst = con.prepareStatement("select *from postpaid_customer_transactions where cust_id = ?");
            pst.setString(1, custID);
            rs = pst.executeQuery();
            
            while(rs.next()){
                String compStr = rs.getString("cust_trans_id");
                String custTID= rs.getString("cust_trans_id");                
                String prevBal = rs.getString("balance");

                int compTrasactionNumPart = Integer.parseInt(compStr.substring(2,8));
            
                int TrasactionNumPart = Integer.parseInt(jLabel15.getText().substring(2,8));
               // System.out.println("comp T:" + compTrasactionNumPart);//
               // System.out.println("current T:" + TrasactionNumPart);//
         
                if (compTrasactionNumPart > TrasactionNumPart){
                                                       // System.out.println("prevBal T:" + prevBal); //
                                                       //  System.out.println("compStr T:" + custTID); //
                                                        //System.out.println("compStr T:" + newBal); //

                    pst = con.prepareStatement("update postpaid_customer_transactions set balance = ? where cust_trans_id = ?");
                    double newBal = Double.parseDouble(prevBal) + ExtraBal;
                    pst.setString(1, Double.toString(newBal));
                    pst.setString(2, custTID);
                    pst.executeUpdate();

                }
            }
                         
        } catch (SQLException ex) {
            Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
        }
        //----------------------------------------------------------------------------------------------------------------------------------------- 
        CustomerGoodsTable();
        StockTable();
        autoID();
        clearFields();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void CustomerGoodsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerGoodsTableMouseClicked
        DefaultTableModel d1 = (DefaultTableModel)CustomerGoodsTable.getModel();
        int SelectIndex = CustomerGoodsTable.getSelectedRow();  

        StockTable.setVisible(false);
        
        jLabel15.setText(d1.getValueAt(SelectIndex, 0).toString());
        jTextField7.setText(d1.getValueAt(SelectIndex, 1).toString());
        jTextField4.setText(d1.getValueAt(SelectIndex, 2).toString());
        description = d1.getValueAt(SelectIndex, 3).toString();
        jTextField8.setText(d1.getValueAt(SelectIndex, 4).toString());
        prevQuantity = jTextField8.getText();
        prevPrice = d1.getValueAt(SelectIndex, 5).toString();      
        jTextField5.setText(prevPrice);
        
        if (prevPrice.isEmpty()){
            jButton14.setEnabled(false);
            jButton13.setEnabled(false);
            jButton10.setEnabled(false);
            jLabel17.setVisible(true);    
            jTextField7.setVisible(true);
            jLabel18.setVisible(true);
            jTextField4.setVisible(true);  
            jLabel20.setVisible(false);
            jTextField8.setVisible(false);
            jLabel21.setVisible(false);
            jTextField5.setVisible(false);
        }
        else{
            jButton14.setEnabled(true);  
            jButton13.setEnabled(true);
        
            jLabel17.setVisible(true);    
            jTextField7.setVisible(true);
            jLabel18.setVisible(true);
            jTextField4.setVisible(true);       

            jButton10.setEnabled(false);
            jLabel20.setVisible(true);
            jTextField8.setVisible(true);
            jLabel21.setVisible(true);
            jTextField5.setVisible(true);
        }

    }//GEN-LAST:event_CustomerGoodsTableMouseClicked

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String compCTID ="";
        String currentCTID = jLabel15.getText();    
        try {
                pst = con.prepareStatement("select *from postpaid_customer_transactions where cust_id = ?");
                pst.setString(1, custID);
                rs = pst.executeQuery();
                ResultSetMetaData rsm = rs.getMetaData();
                int c;
                c = rsm.getColumnCount();
               
                
                while(rs.next()){
  
                    for (int i = 1; i < c; i++){      

                        if(i == c - 1){
                            compCTID = rs.getString("cust_trans_id");
                        }
                    }
                }
                         
        }catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println("compCTID T:" + compCTID); 
        //System.out.println("currentCTID T:" + currentCTID);
      
        if(compCTID.equals(currentCTID)){
            try {
                pst = con.prepareStatement("select *from stock where description = ?");
                pst.setString(1, description);
                rs = pst.executeQuery();
                while(rs.next()){
                    quantityAvailable = rs.getString("quantity_available");
                }
            } catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
            }
            double d4;
            d4 = Double.parseDouble(quantityAvailable) + Double.parseDouble(prevQuantity);

            try {
            pst = con.prepareStatement("update stock set quantity_available = ? where description = ?");
            pst.setString(1, Double.toString(d4));
            pst.setString(2, description);
            pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(GoodsTransactions.class.getName()).log(Level.SEVERE, null, ex);
            }


            try {
                pst = con.prepareStatement("delete from postpaid_customer_transactions where cust_trans_id = ?");
                pst.setString(1, jLabel15.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Item Deleted Successfully! ");

            } catch (SQLException ex) {
                Logger.getLogger(GoodsListing.class.getName()).log(Level.SEVERE, null, ex);
            }

            CustomerGoodsTable();
            StockTable();
            autoID();
            clearFields(); 
       }
       else{
           JOptionPane.showMessageDialog(this, "You can delete only the last entry! ");
       }
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void CustomerGoodsTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerGoodsTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerGoodsTableMouseEntered

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        CustomerPayments ob = new CustomerPayments(this.custID, this.custName);
        ob.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerGoodsLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerGoodsLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerGoodsLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerGoodsLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerGoodsLog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerGoodsTable;
    private javax.swing.JTextField StockSearchBox;
    private javax.swing.JTable StockTable;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
